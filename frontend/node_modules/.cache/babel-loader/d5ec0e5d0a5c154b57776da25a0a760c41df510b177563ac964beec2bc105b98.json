{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rootFolder, setRootFolder] = useState('');\n  const [message, setMessage] = useState('');\n  const handleMergePdfs = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/merge_pdfs', {\n        root_folder: rootFolder\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('An error occurred: ' + error.response.data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Merger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the path to the root folder\",\n      value: rootFolder,\n      onChange: e => setRootFolder(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMergePdfs,\n      children: \"Merge PDFs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"N+CDGTPmrjdARjNrcT+dZyfHayg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","rootFolder","setRootFolder","message","setMessage","handleMergePdfs","response","post","root_folder","data","error","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const [rootFolder, setRootFolder] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleMergePdfs = async () => {\n        try {\n            const response = await axios.post('http://localhost:8000/merge_pdfs', { root_folder: rootFolder });\n            setMessage(response.data.message);\n        } catch (error) {\n            setMessage('An error occurred: ' + error.response.data.detail);\n        }\n    };\n\n    return (\n        <div>\n            <h1>PDF Merger</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter the path to the root folder\"\n                value={rootFolder}\n                onChange={(e) => setRootFolder(e.target.value)}\n            />\n            <button onClick={handleMergePdfs}>Merge PDFs</button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,kCAAkC,EAAE;QAAEC,WAAW,EAAEP;MAAW,CAAC,CAAC;MAClGG,UAAU,CAACE,QAAQ,CAACG,IAAI,CAACN,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZN,UAAU,CAAC,qBAAqB,GAAGM,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACE,MAAM,CAAC;IAClE;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mCAAmC;MAC/CC,KAAK,EAAElB,UAAW;MAClBmB,QAAQ,EAAGC,CAAC,IAAKnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,eAAgB;MAAAO,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDb,OAAO,iBAAIL,OAAA;MAAAc,QAAA,EAAIT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd;AAAChB,EAAA,CA1BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}