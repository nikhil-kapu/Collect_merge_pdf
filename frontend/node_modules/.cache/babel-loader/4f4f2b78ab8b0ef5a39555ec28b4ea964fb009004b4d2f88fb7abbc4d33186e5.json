{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/PdfManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfManager = () => {\n  _s();\n  const [rootFolder, setRootFolder] = useState('');\n  const [outputPath, setOutputPath] = useState('');\n  const [pdfFiles, setPdfFiles] = useState([]);\n  const [message, setMessage] = useState('');\n  const handleFolderChange = event => {\n    const folderPath = event.target.files[0].webkitRelativePath.split('/')[0];\n    setRootFolder(folderPath);\n  };\n  const handleFindPdfs = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/find_pdfs', {\n        rootFolder\n      });\n      setPdfFiles(response.data.pdf_files);\n    } catch (error) {\n      console.error('Error finding PDFs:', error);\n    }\n  };\n  const handleMergePdfs = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/merge_pdfs', {\n        pdf_list: pdfFiles,\n        output_path: outputPath\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('Error merging PDFs:', error);\n      setMessage('Error merging PDFs');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFindPdfs,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        webkitdirectory: \"true\",\n        directory: \"true\",\n        onChange: handleFolderChange,\n        style: {\n          display: 'none'\n        },\n        id: \"folderInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: rootFolder,\n        placeholder: \"Click to select folder\",\n        onClick: () => document.getElementById('folderInput').click(),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Find PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), pdfFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMergePdfs,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: outputPath,\n          onChange: e => setOutputPath(e.target.value),\n          placeholder: \"Enter output path for merged PDF\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Merge PDFs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pdfFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfManager, \"ehO0h/mUBXGMr8NmDKFx7ItqtPE=\");\n_c = PdfManager;\nexport default PdfManager;\nvar _c;\n$RefreshReg$(_c, \"PdfManager\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PdfManager","_s","rootFolder","setRootFolder","outputPath","setOutputPath","pdfFiles","setPdfFiles","message","setMessage","handleFolderChange","event","folderPath","target","files","webkitRelativePath","split","handleFindPdfs","e","preventDefault","response","post","data","pdf_files","error","console","handleMergePdfs","pdf_list","output_path","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","webkitdirectory","directory","onChange","style","display","id","value","placeholder","onClick","document","getElementById","click","readOnly","length","required","map","file","index","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/PdfManager.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst PdfManager = () => {\n    const [rootFolder, setRootFolder] = useState('');\n    const [outputPath, setOutputPath] = useState('');\n    const [pdfFiles, setPdfFiles] = useState([]);\n    const [message, setMessage] = useState('');\n\n    const handleFolderChange = (event) => {\n        const folderPath = event.target.files[0].webkitRelativePath.split('/')[0];\n        setRootFolder(folderPath);\n    };\n\n    const handleFindPdfs = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/find_pdfs', { rootFolder });\n            setPdfFiles(response.data.pdf_files);\n        } catch (error) {\n            console.error('Error finding PDFs:', error);\n        }\n    };\n\n    const handleMergePdfs = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/merge_pdfs', {\n                pdf_list: pdfFiles,\n                output_path: outputPath,\n            });\n            setMessage(response.data.message);\n        } catch (error) {\n            console.error('Error merging PDFs:', error);\n            setMessage('Error merging PDFs');\n        }\n    };\n\n    return (\n        <div>\n            <h2>PDF Manager</h2>\n            <form onSubmit={handleFindPdfs}>\n                <input\n                    type=\"file\"\n                    webkitdirectory=\"true\"\n                    directory=\"true\"\n                    onChange={handleFolderChange}\n                    style={{ display: 'none' }}\n                    id=\"folderInput\"\n                />\n                <input\n                    type=\"text\"\n                    value={rootFolder}\n                    placeholder=\"Click to select folder\"\n                    onClick={() => document.getElementById('folderInput').click()}\n                    readOnly\n                />\n                <button type=\"submit\">Find PDFs</button>\n            </form>\n            {pdfFiles.length > 0 && (\n                <div>\n                    <form onSubmit={handleMergePdfs}>\n                        <input\n                            type=\"text\"\n                            value={outputPath}\n                            onChange={(e) => setOutputPath(e.target.value)}\n                            placeholder=\"Enter output path for merged PDF\"\n                            required\n                        />\n                        <button type=\"submit\">Merge PDFs</button>\n                    </form>\n                    {message && <p>{message}</p>}\n                    <ul>\n                        {pdfFiles.map((file, index) => (\n                            <li key={index}>{file}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PdfManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}