{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/MergePdfs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MergePdfs = ({\n  pdfList\n}) => {\n  _s();\n  const [outputPath, setOutputPath] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/merge_pdfs', {\n        pdf_list: pdfList,\n        output_path: outputPath\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('Error merging PDFs:', error);\n      setMessage('Error merging PDFs');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Merge PDFs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: outputPath,\n        onChange: e => setOutputPath(e.target.value),\n        placeholder: \"Enter output path for merged PDF\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Merge PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(MergePdfs, \"g3Lzw69GO4Nhqpxy6oKXiiCk/pg=\");\n_c = MergePdfs;\nexport default MergePdfs;\nvar _c;\n$RefreshReg$(_c, \"MergePdfs\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MergePdfs","pdfList","_s","outputPath","setOutputPath","message","setMessage","handleSubmit","e","preventDefault","response","post","pdf_list","output_path","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/MergePdfs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MergePdfs = ({ pdfList }) => {\n    const [outputPath, setOutputPath] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/merge_pdfs', {\n                pdf_list: pdfList,\n                output_path: outputPath,\n            });\n            setMessage(response.data.message);\n        } catch (error) {\n            console.error('Error merging PDFs:', error);\n            setMessage('Error merging PDFs');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Merge PDFs</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={outputPath}\n                    onChange={(e) => setOutputPath(e.target.value)}\n                    placeholder=\"Enter output path for merged PDF\"\n                    required\n                />\n                <button type=\"submit\">Merge PDFs</button>\n            </form>\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default MergePdfs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAE;QAClEC,QAAQ,EAAEX,OAAO;QACjBY,WAAW,EAAEV;MACjB,CAAC,CAAC;MACFG,UAAU,CAACI,QAAQ,CAACI,IAAI,CAACT,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CT,UAAU,CAAC,oBAAoB,CAAC;IACpC;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAMuB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBACzBlB,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,UAAW;QAClBsB,QAAQ,EAAGjB,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC,kCAAkC;QAC9CC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACNhB,OAAO,iBAAIN,OAAA;MAAAkB,QAAA,EAAIZ;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACnB,EAAA,CAlCIF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}