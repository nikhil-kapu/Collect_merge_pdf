{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/FindPdfs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindPdfs = ({\n  setPdfList\n}) => {\n  _s();\n  const [rootFolder, setRootFolder] = useState('');\n  const [pdfFiles, setPdfFiles] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/find_pdfs', {\n        rootFolder\n      });\n      setPdfFiles(response.data.pdf_files);\n      setPdfList(response.data.pdf_files);\n    } catch (error) {\n      console.error('Error finding PDFs:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find PDFs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: rootFolder,\n        onChange: e => setRootFolder(e.target.value),\n        placeholder: \"Enter root folder path\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Find PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pdfFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: file\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(FindPdfs, \"VulRKiiSWZj6Sic+uZ6aQhDZJqQ=\");\n_c = FindPdfs;\nexport default FindPdfs;\nvar _c;\n$RefreshReg$(_c, \"FindPdfs\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FindPdfs","setPdfList","_s","rootFolder","setRootFolder","pdfFiles","setPdfFiles","handleSubmit","e","preventDefault","response","post","data","pdf_files","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","map","file","index","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/components/FindPdfs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst FindPdfs = ({ setPdfList }) => {\n    const [rootFolder, setRootFolder] = useState('');\n    const [pdfFiles, setPdfFiles] = useState([]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:8000/find_pdfs', { rootFolder });\n            setPdfFiles(response.data.pdf_files);\n            setPdfList(response.data.pdf_files);\n        } catch (error) {\n            console.error('Error finding PDFs:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Find PDFs</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={rootFolder}\n                    onChange={(e) => setRootFolder(e.target.value)}\n                    placeholder=\"Enter root folder path\"\n                    required\n                />\n                <button type=\"submit\">Find PDFs</button>\n            </form>\n            <ul>\n                {pdfFiles.map((file, index) => (\n                    <li key={index}>{file}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default FindPdfs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAE;QAAER;MAAW,CAAC,CAAC;MACpFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;MACpCZ,UAAU,CAACS,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAMsB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBACzBjB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,UAAW;QAClBqB,QAAQ,EAAGhB,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC,wBAAwB;QACpCC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFrB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACPrB,OAAA;MAAAiB,QAAA,EACKX,QAAQ,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB/B,OAAA;QAAAiB,QAAA,EAAiBa;MAAI,GAAZC,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAnCIF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}