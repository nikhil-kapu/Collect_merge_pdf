{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Alert, Box } from '@mui/material';\nimport { useEffect } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rootFolder, setRootFolder] = useState('');\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('info'); // For setting the alert type\n  const fileInputRef = useRef(null);\n  const handleMergePdfs = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/merge_pdfs', {\n        root_folder: rootFolder\n      });\n      if (response && response.data) {\n        setMessage(response.data.message);\n        setSeverity('success');\n      } else {\n        setMessage('An unexpected error occurred.');\n        setSeverity('error');\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.detail) {\n        setMessage('An error occurred: ' + error.response.data.detail);\n        setSeverity('error');\n      } else {\n        setMessage('An unexpected error occurred.');\n        setSeverity('error');\n      }\n    }\n  };\n  const handleFolderSelection = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      // Get the directory path\n      const directoryPath = files[0].webkitRelativePath.split('/')[0];\n      setRootFolder(directoryPath);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"PDF Merger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Select the root folder\",\n        variant: \"outlined\",\n        value: rootFolder,\n        onClick: () => fileInputRef.current.click(),\n        readOnly: true,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        webkitdirectory: \"true\",\n        mozdirectory: \"true\",\n        directory: \"true\",\n        multiple: true,\n        onChange: handleFolderSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleMergePdfs,\n        children: \"Merge PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: severity,\n        sx: {\n          mt: 3\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"tZdKqaKgDp2MYSrfjOLWf4WHQ20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","TextField","Button","Container","Typography","Alert","Box","useEffect","jsxDEV","_jsxDEV","App","_s","rootFolder","setRootFolder","message","setMessage","severity","setSeverity","fileInputRef","handleMergePdfs","response","post","root_folder","data","error","detail","handleFolderSelection","event","files","target","length","directoryPath","webkitRelativePath","split","maxWidth","sx","mt","children","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onClick","current","click","readOnly","mb","type","ref","style","display","webkitdirectory","mozdirectory","directory","multiple","onChange","color","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Alert, Box } from '@mui/material';\nimport { useEffect } from 'react-use';\n\nfunction App() {\n    const [rootFolder, setRootFolder] = useState('');\n    const [message, setMessage] = useState('');\n    const [severity, setSeverity] = useState('info'); // For setting the alert type\n    const fileInputRef = useRef(null);\n\n    const handleMergePdfs = async () => {\n        try {\n            const response = await axios.post('http://localhost:8000/merge_pdfs', { root_folder: rootFolder });\n            if (response && response.data) {\n                setMessage(response.data.message);\n                setSeverity('success');\n            } else {\n                setMessage('An unexpected error occurred.');\n                setSeverity('error');\n            }\n        } catch (error) {\n            if (error.response && error.response.data && error.response.data.detail) {\n                setMessage('An error occurred: ' + error.response.data.detail);\n                setSeverity('error');\n            } else {\n                setMessage('An unexpected error occurred.');\n                setSeverity('error');\n            }\n        }\n    };\n\n    const handleFolderSelection = (event) => {\n        const files = event.target.files;\n        if (files.length > 0) {\n            // Get the directory path\n            const directoryPath = files[0].webkitRelativePath.split('/')[0];\n            setRootFolder(directoryPath);\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\n            <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" gutterBottom>\n                    PDF Merger\n                </Typography>\n                <TextField\n                    fullWidth\n                    label=\"Select the root folder\"\n                    variant=\"outlined\"\n                    value={rootFolder}\n                    onClick={() => fileInputRef.current.click()}\n                    readOnly\n                    sx={{ mb: 2 }}\n                />\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: 'none' }}\n                    webkitdirectory=\"true\"\n                    mozdirectory=\"true\"\n                    directory=\"true\"\n                    multiple\n                    onChange={handleFolderSelection}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handleMergePdfs}>\n                    Merge PDFs\n                </Button>\n                {message && (\n                    <Alert severity={severity} sx={{ mt: 3 }}>\n                        {message}\n                    </Alert>\n                )}\n            </Box>\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}