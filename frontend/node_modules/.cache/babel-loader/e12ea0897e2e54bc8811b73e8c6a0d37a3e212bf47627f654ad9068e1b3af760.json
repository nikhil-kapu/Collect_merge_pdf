{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Alert, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rootFolder, setRootFolder] = useState('');\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('info'); // For setting the alert type\n\n  const handleMergePdfs = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/merge_pdfs', {\n        root_folder: rootFolder\n      });\n      if (response && response.data) {\n        setMessage(response.data.message);\n        setSeverity('success');\n      } else {\n        setMessage('An unexpected error occurred.');\n        setSeverity('error');\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.detail) {\n        setMessage('An error occurred: ' + error.response.data.detail);\n        setSeverity('error');\n      } else {\n        setMessage('An unexpected error occurred.');\n        setSeverity('error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 5\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"PDF Merger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter the path to the root folder\",\n        variant: \"outlined\",\n        value: rootFolder,\n        onChange: e => setRootFolder(e.target.value),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleMergePdfs,\n        children: \"Merge PDFs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: severity,\n        sx: {\n          mt: 3\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7UicDiygPctDD3hzuREJW0DIixA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Container","Typography","Alert","Box","jsxDEV","_jsxDEV","App","_s","rootFolder","setRootFolder","message","setMessage","severity","setSeverity","handleMergePdfs","response","post","root_folder","data","error","detail","maxWidth","sx","mt","children","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","e","target","mb","color","onClick","_c","$RefreshReg$"],"sources":["/Users/nikhilkapu/Desktop/Fun Projects/Collect_merge_pdf/frontend/pdf-merge-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Container, Typography, Alert, Box } from '@mui/material';\n\nfunction App() {\n    const [rootFolder, setRootFolder] = useState('');\n    const [message, setMessage] = useState('');\n    const [severity, setSeverity] = useState('info'); // For setting the alert type\n\n    const handleMergePdfs = async () => {\n        try {\n            const response = await axios.post('http://localhost:8000/merge_pdfs', { root_folder: rootFolder });\n            if (response && response.data) {\n                setMessage(response.data.message);\n                setSeverity('success');\n            } else {\n                setMessage('An unexpected error occurred.');\n                setSeverity('error');\n            }\n        } catch (error) {\n            if (error.response && error.response.data && error.response.data.detail) {\n                setMessage('An error occurred: ' + error.response.data.detail);\n                setSeverity('error');\n            } else {\n                setMessage('An unexpected error occurred.');\n                setSeverity('error');\n            }\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\" sx={{ mt: 5 }}>\n            <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" gutterBottom>\n                    PDF Merger\n                </Typography>\n                <TextField\n                    fullWidth\n                    label=\"Enter the path to the root folder\"\n                    variant=\"outlined\"\n                    value={rootFolder}\n                    onChange={(e) => setRootFolder(e.target.value)}\n                    sx={{ mb: 2 }}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handleMergePdfs}>\n                    Merge PDFs\n                </Button>\n                {message && (\n                    <Alert severity={severity} sx={{ mt: 3 }}>\n                        {message}\n                    </Alert>\n                )}\n            </Box>\n        </Container>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}